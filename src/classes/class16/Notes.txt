There are three types of variable with respect to their scope local variables:

Local variables:
    if a variable is created inside a block of code like a method, loop, if condition etc.
    They are called local variables.
 Upside:
    Local variables occupy the memory for the shortest period of time. You should always try to write
    code with the help of local variables.
 Downside:
    They can't be accessed outside the block in which they are created.

Instance variables:
    All the variables which are created inside a class outside of methods are called instance variables.
 Upside:
    we can use them in all the instance methods of that class. their scope is larger than local variables.
    (can be accessed anywhere within the methods and class)
 Downside:
    They stay longer in the memory as compared to local variables.

Static variables:
    All the variables which are outside of methods and have the static keyword are called static variables
 Upside:
    Static variables only occupy one memory location from the RAM even though we create 1000 objects of that class.
    They can be used in any block of code inside the class they can be accessed in any methods of a class
    they can be also be accessed with the help of any object of that class. They have the most wide scope.
    (can be accessed anywhere within the methods and class and objects)
 Downside:
    They are loaded into the memory when a class is loaded even though you don't use them.

========================================================================================================================
Access modifiers:
    Access modifiers are some keywords in java that we can use to control the access of variables, methods and classes.
    There are 4 access levels: private, protected, default, public.
    And there are 3 keywords that we use to control this access for example:
    private, protected and public.

  private:
    if we write private keyword with a variable or a method or a class, we can access that variable or method or class
    within the same class only.
  default:
    default is not a keyword. when we don't write any access modifiers with variables or methods or classes
    default access is applied automatically by java, which means these variables methods or classes can be
    accessed inside any other class which is present inside the same package.
  public:
    public is a keyword. when written with any variable or method or class it means any class in your project
    can access these things.
